<?php

/**
 * @file
 * Create a proc entity reference field.
 */

include_once 'inc/proc_refield.functions.inc';

/**
 * Implements hook_help().
 */
function proc_refield_help($path) {
  switch ($path) {
    case "admin/help#proc_refield":
      return '<p>' . t('Protected Content Reference Field (proc_refield) creates an entity reference field for adding or reusing cipher texts.') . '</p>';
  }
}

/**
 * Implements hook_views_api().
 */
function proc_refield_views_api() {
  return [
    'api' => '3.0',
    'path' => drupal_get_path('module', 'proc_refield') . '/inc',
  ];
}

/**
 * Implements hook_form_field_ui_field_edit_form_alter().
 */
function proc_refield_form_field_ui_field_edit_form_alter(&$form, &$form_state) {
  if ($form['#field']['field_name'] == 'proc_refield' || $form['#field']['type'] == 'entityreference') {
    $settings = $form['#instance']['settings'];
    $form['instance']['settings']['onclick'] = array(
      '#type' => 'fieldset',
      '#title' => t('Protected content API'),
      '#collapsible' => FALSE,
      '#collapsed' => FALSE,
    );
    $form['instance']['settings']['onclick']['enable'] = array(
      '#type' => 'checkboxes',
      '#options' => array('1' => t('Enabled')),
      '#default_value' => isset($settings['onclick']['enable']) ? $settings['onclick']['enable'] : 0,
    );
  }
}

/**
 * Implements hook_element_info_alter().
 */
function proc_refield_element_info_alter(&$types) {
  // Append a process function as gateway for every type with process defined.
  // This is needed for making the integration available for any widget chosen.
  // It will be filtered down only to instances of proc_refield in the process
  // of the widget chosen, where the instance settings are available.
  // @TODO: consider using hook_field_widget_form_alter() instead.
  foreach ($types as $type_key => $type) {
    if (isset($type['#process'])) {
      $types[$type_key]['#process'][] = 'proc_refield_process_widget';
    }
  }
}

/**
 * Process callback.
 */
function proc_refield_process_widget($element) {
  if (!isset($element['#entity_type'])) {
    return $element;
  }

  $instance = field_info_instance($element['#entity_type'], $element['#field_name'], $element['#bundle']);
  if (isset($instance['settings']['onclick']) && $instance['settings']['onclick']['enable']['1'] == '1') {
    // @TODO: rename this hook for proc_refield_widget_process_onclick.
    drupal_alter('proc_refield_widget_process', $element);
  }
  return $element;
}

/**
 * Implements hook_views_default_views().
 */
function proc_refield_views_default_views() {
  // This view lists cipher texts sent to the current user and is used to
  // populate the available items in the entity reference field (proc_refield).
  // This way the current user will be able to reuse user's own cipher texts.
  $view = new view();
  $view->name = 'proc_refield_my_ciphers';
  $view->description = '';
  $view->tag = 'default';
  $view->base_table = 'proc';
  $view->human_name = 'My Ciphers';
  $view->core = 7;
  $view->api_version = '3.0';
  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
  /* Display: Master */
  $handler = $view->new_display('default', 'Master', 'default');
  $handler->display->display_options['title'] = 'My protected content lato sensu';
  $handler->display->display_options['use_more_always'] = FALSE;
  $handler->display->display_options['access']['type'] = 'none';
  $handler->display->display_options['cache']['type'] = 'none';
  $handler->display->display_options['query']['type'] = 'views_query';
  $handler->display->display_options['exposed_form']['type'] = 'basic';
  $handler->display->display_options['pager']['type'] = 'none';
  $handler->display->display_options['pager']['options']['offset'] = '0';
  $handler->display->display_options['style_plugin'] = 'table';
  $handler->display->display_options['style_options']['columns'] = array(
    'pid' => 'pid',
  );
  $handler->display->display_options['style_options']['default'] = '-1';
  $handler->display->display_options['style_options']['info'] = array(
    'pid' => array(
      'sortable' => 0,
      'default_sort_order' => 'asc',
      'align' => '',
      'separator' => '',
      'empty_column' => 0,
    ),
  );
  /* Relationship: Protected Content: Proc Armored author */
  $handler->display->display_options['relationships']['uid']['id'] = 'uid';
  $handler->display->display_options['relationships']['uid']['table'] = 'proc';
  $handler->display->display_options['relationships']['uid']['field'] = 'uid';
  /* Relationship: Entity Reference: Referenced Entity */
  $handler->display->display_options['relationships']['proc_recipient_target_id']['id'] = 'proc_recipient_target_id';
  $handler->display->display_options['relationships']['proc_recipient_target_id']['table'] = 'field_data_proc_recipient';
  $handler->display->display_options['relationships']['proc_recipient_target_id']['field'] = 'proc_recipient_target_id';
  $handler->display->display_options['relationships']['proc_recipient_target_id']['required'] = TRUE;
  /* Field: Protected Content: Proc Armored entity ID */
  $handler->display->display_options['fields']['pid']['id'] = 'pid';
  $handler->display->display_options['fields']['pid']['table'] = 'proc';
  $handler->display->display_options['fields']['pid']['field'] = 'pid';
  $handler->display->display_options['fields']['pid']['exclude'] = TRUE;
  /* Field: Protected Content: Ciphertext recipient user reference */
  $handler->display->display_options['fields']['proc_recipient']['id'] = 'proc_recipient';
  $handler->display->display_options['fields']['proc_recipient']['table'] = 'field_data_proc_recipient';
  $handler->display->display_options['fields']['proc_recipient']['field'] = 'proc_recipient';
  $handler->display->display_options['fields']['proc_recipient']['label'] = '';
  $handler->display->display_options['fields']['proc_recipient']['exclude'] = TRUE;
  $handler->display->display_options['fields']['proc_recipient']['element_label_colon'] = FALSE;
  $handler->display->display_options['fields']['proc_recipient']['hide_alter_empty'] = FALSE;
  $handler->display->display_options['fields']['proc_recipient']['click_sort_column'] = 'target_id';
  $handler->display->display_options['fields']['proc_recipient']['settings'] = array(
    'bypass_access' => 0,
    'link' => 0,
  );
  $handler->display->display_options['fields']['proc_recipient']['delta_offset'] = '0';
  $handler->display->display_options['fields']['proc_recipient']['separator'] = ' - ';
  /* Field: Protected Content: Protected content title */
  $handler->display->display_options['fields']['title']['id'] = 'title';
  $handler->display->display_options['fields']['title']['table'] = 'proc';
  $handler->display->display_options['fields']['title']['field'] = 'title';
  $handler->display->display_options['fields']['title']['label'] = '';
  $handler->display->display_options['fields']['title']['alter']['alter_text'] = TRUE;
  $handler->display->display_options['fields']['title']['alter']['text'] = '([pid]) [title] <b>Encrypted for:</b> [proc_recipient]';
  $handler->display->display_options['fields']['title']['alter']['path'] = 'proc/[pid]';
  $handler->display->display_options['fields']['title']['element_label_colon'] = FALSE;
  $handler->display->display_options['fields']['title']['element_default_classes'] = FALSE;
  /* Sort criterion: Protected Content: Proc Armored entity ID */
  $handler->display->display_options['sorts']['pid']['id'] = 'pid';
  $handler->display->display_options['sorts']['pid']['table'] = 'proc';
  $handler->display->display_options['sorts']['pid']['field'] = 'pid';
  $handler->display->display_options['sorts']['pid']['order'] = 'DESC';
  /* Filter criterion: Protected Content: Proc Armored entity type (bundle) */
  $handler->display->display_options['filters']['type']['id'] = 'type';
  $handler->display->display_options['filters']['type']['table'] = 'proc';
  $handler->display->display_options['filters']['type']['field'] = 'type';
  $handler->display->display_options['filters']['type']['value'] = 'proc_ciphertxt';
  /* Filter criterion: User: Current */
  $handler->display->display_options['filters']['uid_current']['id'] = 'uid_current';
  $handler->display->display_options['filters']['uid_current']['table'] = 'users';
  $handler->display->display_options['filters']['uid_current']['field'] = 'uid_current';
  $handler->display->display_options['filters']['uid_current']['relationship'] = 'proc_recipient_target_id';
  $handler->display->display_options['filters']['uid_current']['value'] = '1';
  /* Display: Page */
  $handler = $view->new_display('page', 'Page', 'page');
  $handler->display->display_options['path'] = 'my-ciphers';
  /* Display: Entity Reference */
  $handler = $view->new_display('entityreference', 'Entity Reference', 'entityreference_1');
  $handler->display->display_options['defaults']['title'] = FALSE;
  $handler->display->display_options['pager']['type'] = 'some';
  $handler->display->display_options['defaults']['style_plugin'] = FALSE;
  $handler->display->display_options['style_plugin'] = 'entityreference_style';
  $handler->display->display_options['style_options']['search_fields'] = array(
    'pid' => 'pid',
    'title' => 'title',
  );
  $handler->display->display_options['defaults']['style_options'] = FALSE;
  $handler->display->display_options['defaults']['row_plugin'] = FALSE;
  $handler->display->display_options['row_plugin'] = 'entityreference_fields';
  $handler->display->display_options['row_options']['inline'] = array(
    'pid' => 'pid',
    'title' => 'title',
  );
  $handler->display->display_options['row_options']['default_field_elements'] = FALSE;
  $handler->display->display_options['defaults']['row_options'] = FALSE;
  $views[$view->name] = $view;
  return $views;
}
