<?php

/**
 * @file
 * Create a proc entity reference field.
 */

include_once 'inc/proc_refield.functions.inc';

/**
 * Implements hook_help().
 */
function proc_refield_help($path) {
  switch ($path) {
    case "admin/help#proc_refield":
      return '<p>' . t('Protected Content Reference Field (proc_refield) creates an entity reference field for adding or reusing cipher texts.') . '</p>';
  }
}

/**
 * Implements hook_views_api().
 */
function proc_refield_views_api() {
  return [
    'api' => '3.0',
    'path' => drupal_get_path('module', 'proc_refield') . '/inc',
  ];
}

/**
 * Implements hook_form_field_ui_field_edit_form_alter().
 */
function proc_refield_form_field_ui_field_edit_form_alter(&$form, &$form_state) {
  if ($form['#field']['field_name'] == 'proc_refield' || $form['#field']['type'] == 'entityreference') {
    $settings = $form['#instance']['settings'];
    $form['instance']['settings']['onclick'] = array(
      '#type' => 'fieldset',
      '#title' => t('Protected content API'),
      '#collapsible' => FALSE,
      '#collapsed' => FALSE,
    );
    $form['instance']['settings']['onclick']['enable'] = array(
      '#type' => 'checkboxes',
      '#options' => array('1' => t('Enabled')),
      '#default_value' => isset($settings['onclick']['enable']) ? $settings['onclick']['enable'] : 0,
    );
  }
}

/**
 * Implements hook_element_info_alter().
 */
function proc_refield_element_info_alter(&$types) {
  // Append a process function as gateway for every type with process defined.
  // This is needed for making the integration available for any widget chosen.
  // It will be filtered down only to instances of proc_refield in the process
  // of the widget chosen, where the instance settings are available.
  // @TODO: consider using hook_field_widget_form_alter() instead.
  foreach ($types as $type_key => $type) {
    if (isset($type['#process'])) {
      $types[$type_key]['#process'][] = 'proc_refield_process_widget';
    }
  }
}

/**
 * Process callback.
 */
function proc_refield_process_widget($element) {
  if (!isset($element['#entity_type'])) {
    return $element;
  }

  $instance = field_info_instance($element['#entity_type'], $element['#field_name'], $element['#bundle']);
  if (isset($instance['settings']['onclick']) && $instance['settings']['onclick']['enable']['1'] == '1') {
    // @TODO: rename this hook for proc_refield_widget_process_onclick.
    drupal_alter('proc_refield_widget_process', $element);
  }
  return $element;
}
