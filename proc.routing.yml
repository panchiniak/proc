proc.generate_keys:
  path: '/proc/generate-keys'
  defaults:
    _title: 'Generate Keys'
    _form: '\Drupal\proc\Form\ProcKeysGenerationForm'
  requirements:
    _permission: 'access content'
    _access: 'TRUE'

proc.encrypt:
  path: '/proc/add/{proc}'
  defaults:
    _title: 'Encrypt'
    _form: '\Drupal\proc\Form\ProcEncryptForm'
  requirements:
    _permission: 'access content'
    _access: 'TRUE'

proc.update:
  path: '/proc/update/{proc}/{user}'
  defaults:
    _title: 'Update'
    _form: '\Drupal\proc\Form\ProcUpdateForm'
  requirements:
    _permission: 'access content'
    _access: 'TRUE'

proc.settings_form:
  path: '/admin/config/system/proc'
  defaults:
    _title: 'Protected Content settings'
    _form: 'Drupal\proc\Form\SettingsForm'
  requirements:
    _permission: 'administer proc configuration'

proc.json_api_proc:
  path: '/api/proc/getpubkey/{user_ids}/{search_by}'
  defaults:
    _controller: 'Drupal\proc\Controller\JsonApiProcController::index'
    _title: 'Proc JSON api'
  methods: [ GET ]
  requirements:
    _access: 'TRUE'

proc.json_api_proc_cipher:
  path: '/api/proc/getcipher/{cipher_id}'
  defaults:
    _controller: 'Drupal\proc\Controller\JsonApiProcController::cipher'
    _title: 'Proc JSON api'
  methods: [ GET ]
  requirements:
    _access: 'TRUE'

proc.decrypt:
  path: '/proc/{proc}'
  defaults:
    _title: 'Decrypt'
    _form: '\Drupal\proc\Form\ProcDecryptForm'
  requirements:
    _permission: 'access content'
    _access: 'TRUE'

# # Route name can be used in several places; e.g. links, redirects, and local
# # actions.
entity.proc.canonical:
  path: '/proc/{proc}/details'
  defaults:
    # Calls the view controller, defined in the annotation of the contact
    # entity. This marks this route as belonging to this entity type.
    _entity_view: 'proc'
    _title: 'Protected content details'
  requirements:
    # Calls the access controller of the entity, passing in the suffix ('view')
    # as the $operation parameter to checkAccess().
    _entity_access: 'proc.view'
