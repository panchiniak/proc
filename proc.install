<?php

/**
 * @file
 * Set up a structure for storing pgp keys and cipher texts.
 */

/**
 * Implements hook_schema().
 */
function proc_schema() {
  $schema = array();

  // @TODO: create custom entity to manage keys
  $schema['proc_keys'] = array(
    'description' => 'Stores public as-is and encrypted private keys and metadata on a per user/keys generated basis',
    'fields' => array(
      'kid' => array(
        'description' => 'Serial Key ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
      ),
      'uid' => array(
        'description' => 'User id from the users table.',
        'type' => 'int',
        'size' => 'medium',
        'unsigned' => TRUE,
      ),
      'created' => array(
        'description' => 'Timestamp for when keys were recorded.',
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
      ),
      'public_key' => array(
        'description' => 'PGP public key.',
        'type' => 'text',
        'size' => 'medium',
      ),
      'encrypted_private_key' => array(
        'description' => 'Encrypted PGP private key.',
        'type' => 'text',
        'size' => 'medium',
      ),
      'generation_timestamp' => array(
        'description' => 'Linux epoche timestamp when keys were recorded.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'generation_timespan' => array(
        'description' => 'Timespan of keys generation in seconds.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'browser_fingerprint' => array(
        'description' => 'Browser information.',
        'type' => 'text',
        'size' => 'medium',
      ),
    ),
    'primary key' => array('kid'),
  );
  // @TODO: create custom entity to manage cipher texts
  $schema['proc_cipher_texts'] = array(
    'description' => 'Stores cipher texts',
    'fields' => array(
      'cid' => array(
        'description' => 'Serial Cipher ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
      ),
      'sender_uid' => array(
        'description' => 'User id of sender from the users table.',
        'type' => 'int',
        'size' => 'medium',
        'unsigned' => TRUE,
      ),
      'recipient_uid' => array(
        'description' => 'User id of recipient from the users table.',
        'type' => 'int',
        'size' => 'medium',
        'unsigned' => TRUE,
      ),
      'recipients_uids' => array(
        'description' => 'Serialized user IDs of recipients from the users table.',
        'type' => 'text',
        'not null' => TRUE,
        'serialize' => TRUE,
      ),
      'created' => array(
        'description' => 'Timestamp when cipher text was recorded.',
        'type' => 'int',
        'size' => 'normal',
        'unsigned' => TRUE,
      ),
      'cipher_text' => array(
        'description' => 'Cipher text.',
        'type' => 'text',
        'size' => 'big',
      ),
      'cipher_generation_timestamp' => array(
        'description' => 'Linux epoche timestamp when cipher text was recorded.',
        'type' => 'numeric',
        'unsigned' => TRUE,
        'precision' => 15,
        'scale' => 3,
      ),
      'cipher_generation_timespan' => array(
        'description' => 'Timespan of cipher text generation in seconds.',
        'type' => 'numeric',
        'unsigned' => TRUE,
        'precision' => 18,
        'scale' => 16,
      ),
      'cipher_browser_fingerprint' => array(
        'description' => 'Browser information.',
        'type' => 'text',
        'size' => 'medium',
      ),
      'source_file_name' => array(
        'description' => 'Name of file source.',
        'type' => 'text',
        'size' => 'small',
      ),
      'source_file_size' => array(
        'description' => 'Size of file source in bytes.',
        'type' => 'text',
        'size' => 'small',
      ),
      'source_file_type' => array(
        'description' => 'Type of file source.',
        'type' => 'text',
        'size' => 'small',
      ),
      'source_file_last_change' => array(
        'description' => 'Time stamp of last change made on source file.',
        'type' => 'numeric',
        'unsigned' => TRUE,
        'precision' => 15,
        'scale' => 3,
      ),
    ),
    'primary key' => array('cid'),
  );

  return $schema;
}
