<?php

/**
 * @file
 * Install, update and uninstall functions for the Protected Content module.
 */

/**
 * Implements hook_install().
 */
function proc_install() {
  \Drupal::messenger()->addStatus(__FUNCTION__);
}

/**
 * Implements hook_uninstall().
 */
function proc_uninstall() {
  \Drupal::messenger()->addStatus(__FUNCTION__);
}

/**
 * Implements hook_schema().
 */
function proc_schema() {

  // $schema['proc'] = [
  //   'description' => 'The base table for proc.',
  //   'fields' => [
  //     'pid' => [
  //       'description' => 'Armored entity primary identifier.',
  //       'type' => 'serial',
  //       'unsigned' => TRUE,
  //       'not null' => TRUE,
  //     ],
  //     'uid' => [
  //       'description' => 'User id from the users table.',
  //       'type' => 'int',
  //       'not null' => TRUE,
  //       'default' => 0,
  //     ],
  //     'label' => [
  //       'description' => 'The label of this protected content.',
  //       'type' => 'text',
  //       'size' => 'small',
  //     ],
  //     'status' => [
  //       'description' => 'Boolean indicating whether the proc is published (visible to non-administrators).',
  //       'type' => 'int',
  //       'not null' => TRUE,
  //       'default' => 1,
  //     ],
  //     'type' => [
  //       'description' => 'Entity instance type.',
  //       'type' => 'text',
  //       'size' => 'medium',
  //     ],
  //     'created' => [
  //       'description' => 'The Unix timestamp when the armored was created.',
  //       'type' => 'int',
  //       'not null' => TRUE,
  //       'default' => 0,
  //     ],
  //     'changed' => [
  //       'description' => 'The Unix timestamp when the armored was changed.',
  //       'type' => 'int',
  //       'not null' => TRUE,
  //       'default' => 0,
  //     ],
  //     'meta' => [
  //       'description' => 'Unprotected metadata of this protected content.',
  //       'type' => 'text',
  //       'size' => 'normal',
  //       'not null' => TRUE,
  //       'default' => NULL,
  //     ],
  //   ],
  //   'primary key' => ['pid'],
  // ];



  $schema['proc_example'] = [
    'description' => 'Table description.',
    'fields' => [
      'id' => [
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique record ID.',
      ],
      'uid' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {users}.uid of the user who created the record.',
      ],
      'status' => [
        'description' => 'Boolean indicating whether this record is active.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
      ],
      'type' => [
        'type' => 'varchar_ascii',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Type of the record.',
      ],
      'created' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Timestamp when the record was created.',
      ],
      'data' => [
        'type' => 'blob',
        'not null' => TRUE,
        'size' => 'big',
        'description' => 'The arbitrary data for the item.',
      ],
    ],
    'primary key' => ['id'],
    'indexes' => [
      'type' => ['type'],
      'uid' => ['uid'],
      'status' => ['status'],
    ],
  ];

  return $schema;
}

/**
 * Implements hook_requirements().
 */
function proc_requirements($phase) {
  $requirements = [];

  if ($phase == 'runtime') {
    $value = mt_rand(0, 100);
    $requirements['proc_status'] = [
      'title' => t('Protected Content status'),
      'value' => t('Protected Content value: @value', ['@value' => $value]),
      'severity' => $value > 50 ? REQUIREMENT_INFO : REQUIREMENT_WARNING,
    ];
  }

  return $requirements;
}
