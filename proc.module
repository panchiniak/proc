<?php
/**
 * @file
 * Primary module hooks for Protected Content module.
 */

require_once 'inc/proc.functions.inc';

 /**
 * Implements hook_form_alter().
 */
function proc_form_proc_keys_generation_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $proc_data = _proc_common_get_decryption_form_data(NULL);

  $form['#attached'] = [
    'library' => [
      0 => 'proc/openpgpjs',
      1 => 'proc/proc-generate-keys',
    ],
    'drupalSettings' => [
      'proc' => [
        'proc_labels' => _proc_js_labels(),
        'proc_data'   => $proc_data, 
      ]
    ],
  ];

  $form['#action'] = 'generate-keys';
  // $path_service = \Drupal::service('redirect.destination')->getAsArray()['destination'];
  // if ($path_service) {
  //   $form['#action'] = $path_service;  
  // }
}

 /**
 * Implements hook_form_alter().
 */
function proc_form_proc_encrypt_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $proc_data = _proc_common_get_decryption_form_data(NULL);

  $current_path = \Drupal::service('path.current')->getPath();
  $path_array = explode('/', $current_path);

  // ksm($path_array[3]);
  $selected_user_ids = explode(',', $path_array[3]);

  // Given a user ID, get the creation date of its 
  // newwest encryption key.
  $proc_ids = [];
  foreach ($selected_user_ids as $user_id) {
    $query = \Drupal::entityQuery('proc')
      ->condition('user_id', $user_id)
      ->condition('type', 'keyring')
      ->sort('id', 'DESC')
      ->range(0, 1);
    $proc_ids[$user_id] = key($query->execute());
  }

  $created = [];
  foreach ($proc_ids as $user_id => $proc_id) {
    // Get the creation data of the proc ID:
    $proc = \Drupal\proc\Entity\Proc::load($proc_id);
    $created[$user_id] = $proc->get('created')->getValue()[0]['value'];
  }



  $form['#attached'] = [
    'library' => [
      0 => 'proc/openpgpjs',
      1 => 'proc/proc-encrypt',
    ],
    'drupalSettings' => [
      'proc' => [
        'proc_labels' => _proc_js_labels(),
        'proc_data'   => $proc_data,
        // @todo: turn this into a configuration:
        'proc_file_entity_max_filesize' => 999999,
        'proc_post_max_size_bytes' => 999999,
        'proc_recipients_pubkeys_changed' => json_encode($created),
        'basePath' => base_path(),
      ]
    ],
  ];
  $form['#action'] = 'generate-keys'; 
}